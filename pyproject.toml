[project]
name = "openvpn-manager"
version = "1.0.0"
description = "A comprehensive OpenVPN server management platform"
authors = [
    {name = "OpenVPN Manager Team", email = "team@openvpn-manager.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
keywords = ["openvpn", "vpn", "management", "flask", "security"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: Flask",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
    "Topic :: System :: Networking",
    "Topic :: System :: Systems Administration",
]

dependencies = [
    "Flask>=3.0.0",
    "Flask-RESTful>=0.3.10",
    "Flask-SQLAlchemy>=3.1.1",
    "Flask-Migrate>=4.0.5",
    "Flask-Login>=0.6.3",
    "Flask-WTF>=1.2.1",
    "Flask-JWT-Extended>=4.6.0",
    "Flask-Cors>=4.0.0",
    "Flask-SocketIO>=5.3.6",
    "Flask-Mail>=0.9.1",
    "SQLAlchemy>=2.0.23",
    "psycopg2-binary>=2.9.9",
    "alembic>=1.13.1",
    "redis>=5.0.1",
    "celery>=5.3.4",
    "pyotp>=2.9.0",
    "qrcode[pil]>=7.4.2",
    "bcrypt>=4.1.2",
    "cryptography>=41.0.8",
    "requests>=2.31.0",
    "gunicorn>=21.2.0",
    "Werkzeug>=3.0.1",
    "WTForms>=3.1.1",
    "marshmallow>=3.20.2",
    "python-dotenv>=1.0.0",
    "prometheus-client>=0.19.0",
    "structlog>=23.2.0",
    "psutil>=5.9.6",
    "python-dateutil>=2.8.2",
    "pydantic>=2.5.1",
    "pydantic-settings>=2.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-flask>=1.3.0",
    "pytest-cov>=4.1.0",
    "black>=23.11.0",
    "flake8>=6.1.0",
    "mypy>=1.7.0",
    "bandit>=1.7.5",
    "pre-commit>=3.6.0",
    "isort>=5.12.0",
    "safety>=2.3.0",
]

test = [
    "pytest>=7.4.3",
    "pytest-flask>=1.3.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "factory-boy>=3.3.0",
]

docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.25.0",
]

monitoring = [
    "prometheus-client>=0.19.0",
    "grafana-api>=1.0.3",
]

[project.urls]
Homepage = "https://github.com/your-username/openvpn-manager"
Documentation = "https://docs.openvpn-manager.com"
Repository = "https://github.com/your-username/openvpn-manager.git"
Issues = "https://github.com/your-username/openvpn-manager/issues"
Changelog = "https://github.com/your-username/openvpn-manager/blob/main/CHANGELOG.md"

[project.scripts]
openvpn-manager = "app:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 100

[tool.flake8]
max-line-length = 100
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
    "migrations"
]
ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (black handles this)
    "W503",  # line break before binary operator
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "celery.*",
    "redis.*",
    "psycopg2.*",
    "pyotp.*",
    "qrcode.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --disable-warnings"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "api: marks tests as API tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "migrations", "build", "dist"]
skips = ["B101", "B601"]

[tool.bandit.assert_used]
skips = ["*_test.py", "*/test_*.py"]
